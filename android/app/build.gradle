// Apply necessary Android and Flutter plugins
apply plugin: "com.android.application"
apply plugin: "kotlin-android"
// Apply Google Services plugin (ensure it's declared in the root build.gradle's dependencies)
apply plugin: "com.google.gms.google-services"
apply plugin: "dev.flutter.flutter-gradle-plugin"

// Function to read version code/name from local.properties or pubspec.yaml
def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    // Fallback if not in local.properties
    flutterVersionCode = '1' // Default if not found
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    // Fallback if not in local.properties
    flutterVersionName = '1.0' // Default if not found
}


android {
    // Set your app's namespace
    namespace "com.shamilTechnologies.shamil_mobile_app"

    // *** Use Flutter's compileSdkVersion ***
    // This value is defined in the root android/build.gradle's ext block
    compileSdkVersion flutter.compileSdkVersion

    // Set Java compatibility options
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        // Enable core library desugaring
        coreLibraryDesugaringEnabled true
    }

    // Set Kotlin JVM target
    kotlinOptions {
        jvmTarget = '1.8'
        // Add Kotlin compiler options to handle compatibility issues
        freeCompilerArgs += [
            "-Xopt-in=kotlin.RequiresOptIn",
            "-Xjvm-default=all"
        ]
    }

    // Default configuration for all build types
    defaultConfig {
        applicationId "com.shamilTechnologies.shamil_mobile_app"

        // *** Set explicit minSdkVersion for firebase_auth compatibility ***
        minSdkVersion 23     // Required by firebase_auth
        targetSdkVersion flutter.targetSdkVersion

        // *** Use standard Flutter versioning ***
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        // Enable multidex support if needed
        multiDexEnabled true
    }

    // Signing configurations (ensure you have release signing set up)
    signingConfigs {
        // debug {} // Default debug config is usually sufficient
        // release { // Example release config - uncomment and configure for production
        //     storeFile file('your_release_key.keystore')
        //     storePassword 'your_store_password'
        //     keyAlias 'your_key_alias'
        //     keyPassword 'your_key_password'
        // }
    }


    buildTypes {
        release {
            // TODO: Change signingConfigs.debug to signingConfigs.release for production builds
            signingConfig signingConfigs.debug
            // Enable Proguard/R8 for release builds (recommended)
            // minifyEnabled true
            // shrinkResources true
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        // debug {} // Default debug build type
    }
}

// Flutter plugin configuration
flutter {
    source '../..' // Points to the root of your Flutter project
}

// *** Standard dependencies block ***
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version" // Use kotlin_version defined in root build.gradle
    // Core library desugaring dependency
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    // Add other app-specific dependencies here if needed
    // implementation 'androidx.multidex:multidex:2.0.1' // Required if multiDexEnabled is true and minSdkVersion < 21
}

